// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Structure.Infrastructure.DataBase;

#nullable disable

namespace Structure.Infrastructure.Migrations
{
    [DbContext(typeof(StructureContext))]
    [Migration("20240501105755_addingCompany")]
    partial class addingCompany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Structure.Domain.CompanyAggregate.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CEO")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CFO")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CMO")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("CommercialRegistrationExpireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("CommercialRegistrationStartDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<Guid?>("EditedAt")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("EditedBy")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Facebook")
                        .HasColumnType("text");

                    b.Property<string>("InstitutionNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Linkedin")
                        .HasColumnType("text");

                    b.Property<string>("LogoPath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid");

                    b.Property<string>("SocialInsuranceSubscriptionNumber")
                        .HasColumnType("text");

                    b.Property<int?>("StatusId")
                        .HasColumnType("integer");

                    b.Property<string>("Twitter")
                        .HasColumnType("text");

                    b.Property<string>("UnifiedNationalNumber")
                        .HasColumnType("text");

                    b.Property<string>("Website")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("StatusId");

                    b.ToTable("Companies", "Structure");
                });

            modelBuilder.Entity("Structure.Domain.CompanyAggregate.Models.CompanyStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("companyStatuses");
                });

            modelBuilder.Entity("Structure.Domain.CompanyAggregate.Models.Company", b =>
                {
                    b.HasOne("Structure.Domain.CompanyAggregate.Models.Company", null)
                        .WithMany("Companies")
                        .HasForeignKey("CompanyId");

                    b.HasOne("Structure.Domain.CompanyAggregate.Models.CompanyStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Structure.Domain.CompanyAggregate.Models.Company", b =>
                {
                    b.Navigation("Companies");
                });
#pragma warning restore 612, 618
        }
    }
}
